var async = require('async');
var esut = require('easy_util');
var log = esut.log;
var digestUtil = esut.digestUtil;
var pageUtil = esut.pageUtil;

var dc = require('mcp_db').dc;

var cons = require('mcp_constants');
var userType = cons.userType;
var msgStatus = cons.msgStatus;
var msgType = cons.msgType;
var ticketPrintQueenStatus = cons.ticketPrintQueenStatus;
var ticketPrintStatus = cons.ticketPrintStatus;
var termStatus = cons.termStatus;
var gameGrade = cons.gameGrade;
var gameType = cons.gameType;


var config = require('mcp_config');
var ec = config.ec;
var prop = config.prop;
var game = config.game;

var service = require("mcp_service");
var digestSer = service.digestSer;
var moneySer = service.moneySer;
var kvSer = service.kvSer;
var ticketSer = service.ticketSer;
var notifySer = service.notifySer;

var ChannelQueryControl = function(){
    var self = this;
    self.cmd = {'CQ01':1, 'CQ02':2, 'CQ03':3, 'CQ04':4,
    'CQ05':5, 'CQ06':6 };
    self.cmdArray = [{},
        {id:1, code:'CQ01', fromType:prop.digestFromType.FIX, des:"期次查詢"},
        {id:2, code:'CQ02', fromType:prop.digestFromType.FIX, des:'訂單查詢'},
        {id:3, code:'CQ03', fromType:prop.digestFromType.FIX, des:"票據查詢"},
        {id:4, code:'CQ04', fromType:prop.digestFromType.FIX, des:"奖级查询"},
        {id:5, code:'CQ05', fromType:prop.digestFromType.FIX, des:"期次报表查询"},
        {id:6, code:'CQ06', fromType:prop.digestFromType.FIX, des:"账户余额"}
    ];
};

ChannelQueryControl.prototype.handle = function(headNode, bodyStr, userCb)
{
    var self = this;
    async.waterfall([
        //是否是支持的cmd
        function(cb)
        {
            var cmd = self.cmd[headNode.cmd];
            if(cmd == undefined)
            {
                cb(ec.E9000);
            }
            else
            {
                cb(null);
            }
        },
        //校验头的用户类型是否合法
        function(cb)
        {
            var userTypeId = userType[headNode.userType];
            if(userTypeId == undefined)
            {
                cb(ec.E9005);
            }
            else
            {
                cb(null, userTypeId);
            }
        },
        //获得密钥
        function(userTypeId, cb)
        {
            var cmd = self.cmdArray[self.cmd[headNode.cmd]];
            digestSer.getKey({fromType:cmd.fromType, userId:headNode.userId, userType:userTypeId},
            function(err, key){
                cb(err, key);
            });
        },
        //先解密
        function(key, cb)
        {
            log.info(key);
            var decodedBodyStr = digestUtil.check(headNode, key, bodyStr);
            if(decodedBodyStr == null)
            {
                cb(ec.E9003);
                return;
            }
            var bodyNode;
            try {
                bodyNode = JSON.parse(decodedBodyStr);
                headNode.key = key;
            }
            catch (err)
            {
                cb(ec.E9003);
                return;
            }
            cb(null, bodyNode);
        },
        //check the param
        function(bodyNode, cb){
            var method = 'check' + headNode.cmd;
            self[method](null, headNode, bodyNode, function(err){
                cb(err, bodyNode);
            });
        },
        //业务处理
        function(bodyNode, cb){
            var cmd = 'handle' + headNode.cmd;
            self[cmd](null, headNode, bodyNode, cb);
        }
    ], function (err, bodyNode) {
        userCb(err, bodyNode);
    });
};


ChannelQueryControl.prototype.checkCQ01 = function(user, headNode, bodyNode, cb)
{
    cb(null);
};

ChannelQueryControl.prototype.checkCQ02 = function(user, headNode, bodyNode, cb)
{
    cb(null);
};

ChannelQueryControl.prototype.checkCQ03 = function(user, headNode, bodyNode, cb)
{
    var self = this;
    cb(null);
};

ChannelQueryControl.prototype.checkCQ04 = function(user, headNode, bodyNode, cb)
{
    cb(null);
};

ChannelQueryControl.prototype.checkCQ05 = function(user, headNode, bodyNode, cb)
{
    cb(null);
};

ChannelQueryControl.prototype.checkCQ06 = function(user, headNode, bodyNode, cb)
{
    cb(null);
};

ChannelQueryControl.prototype.checkCQ07 = function(user, headNode, bodyNode, cb)
{
    cb(null);
};

ChannelQueryControl.prototype.checkCQ08 = function(user, headNode, bodyNode, cb)
{
    cb(null);
};


ChannelQueryControl.prototype.checkCQ09 = function(user, headNode, bodyNode, cb)
{
    cb(null);
};


/**
 * 期次查询
 * @param user
 * @param headNode
 * @param bodyNode
 * @param cb
 */
/*ChannelQueryControl.prototype.handleCQ01 = function(user, headNode, bodyNode, cb)
{
    var self = this;
    var backBodyNode = {};
    var table = dc.main.get("term");
    pageUtil.parsePost(bodyNode, backBodyNode);
    var cols = { gameCode:1, code:1,  openTime:1, closeTime:1, status:1 };
    async.waterfall([
        function(cb)
        {
            var cursor = table.find(backBodyNode.cond, cols, []).sort(backBodyNode.sort).limit(backBodyNode.skip, backBodyNode.limit);
            cursor.dateToString();
            cursor.toArray(function(err, data){
                backBodyNode = data;
                cb(err, null);
               //查询的期次为竞猜期次。去查询赔率和明细
                async.each(data, function (row, callback) {
                    var jcoddsTable = dc.mg.get("jcodds");
                    var set = row;
                    var ticketGame = game.getInfo(set.gameCode);
                    if(ticketGame.type == gameType.Jingcai ){
                        var oddCond = {gameCode:set.gameCode, matchCode:set.code };
                        if(backBodyNode.cond.pType){
                            oddCond.pType = backBodyNode.cond.pType;
                        }
                        var oddCols = {matchCode:1, matchName:1, pType:1, oddsCode:1, oddsInfo:1, oddsName:1, oddsSingle:1};
                        var _sort = {pType: 1};
                        jcoddsTable.find(oddCond, oddCols, []).sort(_sort).toArray(function(err, result){
                            set.matchInfo = result;
                            callback(null);
                        });
                    }else{
                        callback(null);
                    }
                }, function (err) {
                    backBodyNode.count = cursor.count(function(err, count){
                        backBodyNode.count = count;
                        cb(err, null);
                    });
                });
            });
        }
    ], function (err, rst) {
        cb(err, backBodyNode);
    });
}*/

/**
 * 期次查询
 * @param user
 * @param headNode
 * @param bodyNode
 * @param cb
 */
ChannelQueryControl.prototype.handleCQ01 = function(user, headNode, bodyNode, cb)
{
    var self = this;
    var backBodyNode = {};
    var table = dc.main.get("term");
    var cond = {};
    if(bodyNode.gameCode == undefined || bodyNode.gameCode == null){
        cb(ec.E2070);
        return;
    }
    cond.gameCode = bodyNode.gameCode;
    if(bodyNode.code == undefined || bodyNode.code == null){
        cond.status = termStatus.ON_SALE;
    }else{
        cond.code = bodyNode.code;
    }
    var cols = { gameCode:1, code:1,  openTime:1, closeTime:1, status:1 };
    async.waterfall([
        function(cb)
        {
            table.findOne(cond,cols, [], function(err, data){
                if(err){
                    cb(err);
                }else{
                    backBodyNode =  data;
                    cb(null, backBodyNode);
                }
            });
        }
    ], function (err, rst) {
        cb(err, backBodyNode);
    });
}

/**
 * 订单查询
 * @param user
 * @param headNode
 * @param bodyNode
 * @param cb
 */
ChannelQueryControl.prototype.handleCQ02 = function(user, headNode, bodyNode, cb)
{
    var self = this;
    var backBodyNode = {};
    var table = dc.main.get("torder");
    pageUtil.parsePost(bodyNode);
    bodyNode.cond.customerId = headNode.userId;
    log.info(bodyNode);
    var cols = {id:1, amount:1, trueAmount:1, outerId:1, createTime:1};
    async.waterfall([
        function(cb)
        {
            var cursor = table.find(bodyNode.cond, cols, []).sort(bodyNode.sort).limit(bodyNode.skip, bodyNode.limit);
            cursor.dateToString();
            cursor.toArray(function(err, data){
                backBodyNode.rst = data;
                cb(err, null);
               /* backBodyNode.count = cursor.count(function(err, count){
                    backBodyNode.count = count;
                    cb(err, null);
                });*/
            });
        }
    ], function (err, rst) {
        cb(err, backBodyNode);
    });
}

/**
 * 票据查询
 * @param user
 * @param headNode
 * @param bodyNode
 * @param cb
 */
ChannelQueryControl.prototype.handleCQ03 = function(user, headNode, bodyNode, cb)
{
    var self = this;
    var backBodyNode = {};
    var table = dc.main.get("tticket");
    pageUtil.parsePost(bodyNode);
    bodyNode.cond.customerId = headNode.userId;

    var cols = {id:1, outerId:1, gameCode:1, termCode:1, pType:1, bType:1,
    createTime:1, status:1, printStatus:1, multiple:1, amount:1, bonus:1,
    bonusBeforeTax:1, bonusDetail:1, number:1, dNumber:1, rNumber:1, orderId:1,
    province:1, seq:1, terminal:1, printId:1,printTime:1,cashTime:1,prizeTime:1,auditTime:1};
    async.waterfall([
        function(cb)
        {
            var cursor = table.find(bodyNode.cond, cols, []).sort(bodyNode.sort).limit(bodyNode.skip, bodyNode.limit);
            cursor.dateToString();
            cursor.toArray(function(err, data){
                backBodyNode.rst = data;
                cb(err, null);
                /*  backBodyNode.count = cursor.count(function(err, count){
                      backBodyNode.count = count;
                      cb(err, null);
                  });*/
            });
        }
    ], function (err, rst) {
        cb(err, backBodyNode);
    });
}

/**
 * 查询期次的奖级
 * @param user
 * @param headNode
 * @param bodyNode
 * @param cb
 */
ChannelQueryControl.prototype.handleCQ04 = function(user, headNode, bodyNode, cb)
{
    var self = this;
    var backBodyNode = {};
    pageUtil.parsePost(bodyNode);
    //指定了期次号，则从数据库中查询
    if(bodyNode.cond.termCode)
    {

        var cols = {name:1, gameCode:1, termCode:1, bonus:1, count:1, level:1};
        var table = dc.main.get("gamegrade");
        async.waterfall([
            function(cb)
            {
                var cursor = table.find(bodyNode.cond, cols, []).sort(bodyNode.sort).limit(bodyNode.skip, bodyNode.limit);
                cursor.dateToString();
                cursor.toArray(function(err, data){
                    backBodyNode.rst = data;
                    cb(err, null);
                    /*  backBodyNode.count = cursor.count(function(err, count){
                          backBodyNode.count = count;
                          cb(err, null);
                      });*/
                });
            }
        ], function (err, rst) {
            cb(err, backBodyNode);
        });
    }
    //未指定期次号，从配置中读取
    else
    {
        var set = gameGrade.getInfoById(backBodyNode.cond.gameCode);
        if(set)
        {
            var rst = [];
            for(var key in set.grades)
            {
                var grade = set.grades[key];
                rst[rst.length] = {level:grade.id, name:grade.des, count:0,
                    gameCode:backBodyNode.cond.gameCode, bonus:grade.bonus, termCode:''};
            }
            backBodyNode.rst = rst;
        }
        cb(null, backBodyNode);
    }
}

/**
 * 期次报表查询
 * @param user
 * @param headNode
 * @param bodyNode
 * @param cb
 */
ChannelQueryControl.prototype.handleCQ05 = function(user, headNode, bodyNode, cb)
{
    var self = this;
    var backBodyNode = {};
    pageUtil.parsePost(bodyNode);

    bodyNode.cond.customerId = headNode.userId;

    var cols = {
        gameCode:1, termCode:1, type:1,saleCount:1, saleAmount:1, hitCount:1, hitAmount:1, bonus:1,
        bonusBeforeTax:1, failCount:1, failAmount:1, createTime:1
    };
    var table = dc.main.get("termreport");
    async.waterfall([
        function(cb)
        {
            var cursor = table.find(bodyNode.cond, cols, []).sort(bodyNode.sort).limit(bodyNode.skip, bodyNode.limit);
            cursor.dateToString();
            cursor.toArray(function(err, data){
                backBodyNode.rst = data;
                cb(err, null);
                /*backBodyNode.count = cursor.count(function(err, count){
                    backBodyNode.count = count;
                    cb(err, null);
                });*/
            });
        }
    ], function (err, rst) {
        cb(err, backBodyNode);
    });

};

/**
 * 查询期次的奖级
 * @param user
 * @param headNode
 * @param bodyNode
 * @param cb
 */
ChannelQueryControl.prototype.handleCQ06 = function(user, headNode, bodyNode, cb)
{
    var self = this;
    var backBodyNode = {};
    var table = dc.mg.get("account");
    pageUtil.parsePost(bodyNode);
    bodyNode.cond.customerId = headNode.userId;

    var cols = {balance:1};
    async.waterfall([
        function(cb)
        {
            var cursor = table.findOne({"_id": headNode.userId}, cols, [], function(err ,data){
                if (err){
                    cb(err);
                }else{
                    delete data._id;
                    backBodyNode = data;
                    cb(err, null);
                }
            });
        }
    ], function (err, rst) {
        cb(err, backBodyNode);
    });
}


module.exports = new ChannelQueryControl();