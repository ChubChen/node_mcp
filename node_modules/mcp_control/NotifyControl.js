var async = require('async');
var esut = require('easy_util');
var log = esut.log;
var digestUtil = esut.digestUtil;
var pageUtil = esut.pageUtil;

var dc = require('mcp_db').dc;

var cons = require('mcp_constants');
var userType = cons.userType;
var msgStatus = cons.msgStatus;
var msgType = cons.msgType;
var ticketPrintQueenStatus = cons.ticketPrintQueenStatus;
var ticketPrintStatus = cons.ticketPrintStatus;
var notifyStatus = cons.notifyStatus;

var config = require('mcp_config');
var ec = config.ec;
var prop = config.prop;

var service = require("mcp_service");
var digestSer = service.digestSer;
var moneySer = service.moneySer;
var kvSer = service.kvSer;
var ticketSer = service.ticketSer;

var PrintControl = function(){
    var self = this;
    self.cmd = {
        'N02':{id:2, code:'N02', fromType:prop.digestFromType.FIX, des:"出票成功"},
        'N03':{id:3, code:'N03', fromType:prop.digestFromType.FIX, des:"游戏通知"},
        'N04':{id:4, code:'N04', fromType:prop.digestFromType.FIX, des:"期次开售"},
        'N05':{id:5, code:'N05', fromType:prop.digestFromType.FIX, des:"期次停售"},
        'N06':{id:6, code:'N06', fromType:prop.digestFromType.FIX, des:"期次后台停售"},
        'N07':{id:7, code:'N07', fromType:prop.digestFromType.FIX, des:"期次开奖"},
        'N08':{id:8, code:'N08', fromType:prop.digestFromType.FIX, des:"期次封存"},
       };
};

PrintControl.prototype.handle = function(bodyNode, Hcmd, userCb)
{
    var self = this;
    async.waterfall([
        //是否是支持的cmd
        function(cb)
        {
            var cmd = self.cmd[Hcmd];
            if(cmd == undefined)
            {
                cb(ec.E9000);
            }
            else
            {
                cb(null);
            }
        },
        //业务处理
        function( cb){
            var cmd = 'handle' + Hcmd;
            self[cmd](null, bodyNode, cb);
        }
    ], function (err, bodyNode) {
        userCb(err, bodyNode);
    });
};


/**
 * 取消息
 * @param user
 * @param headNode
 * @param bodyNode
 * @param cb
 */
PrintControl.prototype.handleN02 = function(user, bodyNode, cb)
{
    var self = this;
    var backBodyNode = {};
    async.waterfall([
        //过滤通知接口字段
        function(cb)
        {
            if(bodyNode == undefined){
                cb(null, {});
            }else{
                var rstArray = [];
                async.each(bodyNode,function(msg, callback){
                    delete  msg.type;
                    delete  msg.uniqueId;
                    delete  bodyNode.passw;
                    delete  bodyNode.cashAmount;
                    rstArray.push(msg);
                    callback(null);
                },function(err){
                    backBodyNode.tickets = rstArray;
                    cb(null, backBodyNode);
                })
            }
        }
    ], function (err, backBodyNode) {
        cb(err, backBodyNode);
    });
};


/**
 * 游戏通知
 * @param user
 * @param headNode
 * @param bodyNode
 * @param cb
 */
PrintControl.prototype.handleN03 = function(user, bodyNode, cb)
{
    var self = this;
    async.waterfall([
        //过滤通知接口字段
        function(cb)
        {
            if(bodyNode == undefined){
                cb(null, {});
            }else{
                delete  bodyNode.type;
                delete  bodyNode.uniqueId;
                cb(null, bodyNode);
            }
        }
    ], function (err, backBodyNode) {
        cb(err, backBodyNode);
    });
};

/**
 * 删除消息
 * @param user
 * @param headNode
 * @param bodyNode
 * @param cb
 */
PrintControl.prototype.handleN04 = function(user, bodyNode, cb)
{
    var self = this;
    async.waterfall([
        //过滤通知接口字段
        function(cb)
        {
            var backBodyNode = {};
            var cols = {gameCode:1,code:1,openTime:1,closeTime:1};
            for(key in cols){
                var temp = cols[key];
                if(temp == 1){
                    if(key == 'code'){
                        backBodyNode.termCode = bodyNode.code;
                    }else{
                        backBodyNode[key] = bodyNode[key];
                    }
                }

            }
            cb(null, backBodyNode);
        }
    ], function (err, backBodyNode) {
        cb(err, backBodyNode);
    });
};

/**
 * 修改期次
 * @param user
 * @param headNode
 * @param bodyNode
 * @param cb
 */
PrintControl.prototype.handleN05 = function(user, bodyNode, cb)
{
    var self = this;
    async.waterfall([
        //过滤通知接口字段
        function(cb)
        {
            var backBodyNode = {};
            var cols = {gameCode:1,code:1,openTime:1,closeTime:1};
            for(key in cols){
                var temp = cols[key];
                if(temp == 1){
                    if(key == 'code'){
                        backBodyNode.termCode = bodyNode.code;
                    }else{
                        backBodyNode[key] = bodyNode[key];
                    }
                }

            }
            cb(null, backBodyNode);
        }
    ], function (err, backBodyNode) {
        cb(err, backBodyNode);
    });
};
/**
 * 修改期次
 * @param user
 * @param headNode
 * @param bodyNode
 * @param cb
 */
PrintControl.prototype.handleN06 = function(user, bodyNode, cb)
{
    var self = this;
    async.waterfall([
        //过滤通知接口字段
        function(cb)
        {
            var backBodyNode = {};
            var cols = {gameCode:1,code:1,closeTime:1};
            for(key in cols){
                var temp = cols[key];
                if(temp == 1){
                    if(key == 'code'){
                        backBodyNode.termCode = bodyNode.code;
                    }else{
                        backBodyNode[key] = bodyNode[key];
                    }
                }

            }
            cb(null, backBodyNode);
        }
    ], function (err, backBodyNode) {
        cb(err, backBodyNode);
    });
};
/**
 * 修改期次
 * @param user
 * @param headNode
 * @param bodyNode
 * @param cb
 */
PrintControl.prototype.handleN07 = function(user, bodyNode, cb)
{

    //todo 需要查询奖级信息
    var self = this;
    async.waterfall([
        //过滤通知接口字段
        function(cb)
        {
            var backBodyNode = {};
            var cols = {gameCode:1,code:1,wNum:1,prizeTime:1};
            for(key in cols){
                var temp = cols[key];
                if(temp == 1){
                    if(key == 'code'){
                        backBodyNode.termCode = bodyNode.code;
                    }else{
                        backBodyNode[key] = bodyNode[key];
                    }
                }

            }
            cb(null, backBodyNode);
        }
    ], function (err, backBodyNode) {
        cb(err, backBodyNode);
    });
};
/**
 * 修改期次
 * @param user
 * @param headNode
 * @param bodyNode
 * @param cb
 */
PrintControl.prototype.handleN08 = function(user, bodyNode, cb)
{
    var self = this;
    async.waterfall([
        //过滤通知接口字段
        function(cb)
        {
            var backBodyNode = {};
            var cols = {gameCode:1,code:11};
            for(key in cols){
                var temp = cols[key];
                if(temp == 1){
                    if(key == 'code'){
                        backBodyNode.termCode = bodyNode.code;
                    }else{
                        backBodyNode[key] = bodyNode[key];
                    }
                }

            }
            cb(null, backBodyNode);
        }
    ], function (err, backBodyNode) {
        cb(err, backBodyNode);
    });
};

var printControl = new PrintControl();
module.exports = printControl;