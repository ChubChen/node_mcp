var esut = require('easy_util');
var log = esut.log;

var TransDataUtil = function(){
    var self = this;
    var JCZQ_PType = {"01":"JCZQ_RQSPF", "02":"JCZQ_SPF","03":"JCLQ_BF","04":"JCZQ_JQS","05":"JCZQ_BQC","06":"JCZQ_HH"};
    var JCZQPType = {"01":"RQSPF", "02":"SPF","03":"CBF","04":"JQS","05":"BQC","06":"HH"};
    var Recive_JCZQPPType = {"RQSPF":"01", "SPF":"02","CBF":"03","JQS":"04","BQC":"05","HH":"06"};
    var SPFResult = {"0":"80","1":"81","3":"83"};
    var Recive_SPFResult = {"80":"0","81":"1","83":"3"};
    var RQSPFResult = {"0":"85","1":"86","3":"88"};
    var Recive_RQSPFResult = {"85":"0","86":"1","88":"3"};
    var JQSResult = {"0":"70","1":"71","2":"72","3":"73","4":"74","5":"75","6":"76","7":"77"};
    var Recive_JQSResult = {"70":"0","71":"1","72":"2","73":"3","74":"4","75":"5","76":"6","77":"7"};
    var BQCResult = {"33":"60","31":"61","30":"62","03":"66","01":"67","00":"68","13":"63","11":"64","10":"65"};
    var Recive_BQCResult = {"60":"33","61":"31","62":"30","66":"03","67":"01","68":"00","63":"13","64":"11","65":"10"};

    var Recive_SD11X5_PType = {"R2":"22","R3":"23","R4":"24","R5":"25","R6":"26","R7":"27","R8":"28","Q2":"30","Z2":"29","Z3":"31","Q3":"32"};
    var SD11X5_PType = {"22":"R2","23":"R3","24":"R4","25":"R5","26":"R6","27":"R7","28":"R8","30":"Q2","29":"Z2","31":"Z3","32":"Q3"};
    var SD11X5_BType = {"22":"WF_11X5_R2","23":"WF_11X5_R3","24":"WF_11X5_R4","25":"WF_11X5_R5","26":"WF_11X5_R6","27":"WF_11X5_R7","28":"WF_11X5_R8","30":"WF_11X5_Q2","29":"WF_11X5_Z2","31":"WF_11X5_Z3","32":"WF_11X5_Q3"};



    self.JCZQ_PType = JCZQ_PType;
    self.JCZQPType = JCZQPType;
    self.SPFResult = SPFResult;
    self.RQSPFResult = RQSPFResult;
    self.JQSResult = JQSResult;
    self.BQCResult = BQCResult;
    self.Recive_JCZQPPType = Recive_JCZQPPType;
    self.Recive_RQSPFResult = Recive_RQSPFResult;
    self.Recive_SPFResult = Recive_SPFResult;
    self.Recive_JQSResult = Recive_JQSResult;
    self.Recive_BQCResult = Recive_BQCResult;
    self.SD11X5_PType = SD11X5_PType;

    self.Recive_SD11X5_PType = Recive_SD11X5_PType;
    self.SD11X5_PType = SD11X5_PType;
    self.SD11X5_BType = SD11X5_BType;
};


TransDataUtil.prototype.transData = function(rst)
{
    var self = this;
    var newObj = new Array();
    try{
        if(rst instanceof Array){
            for(var key in rst){
                var newTicket = {};
                var oldTicket = rst[key];
                newTicket.ticketId = oldTicket._id;
                newTicket.orderId = 0;
                newTicket.vendorId = "9999";
                oldTicket = self.transTicket(oldTicket);
                newTicket.lotteryType = oldTicket.gameCode;
                newTicket.drawSeq = oldTicket.termCode;
                newTicket.gameTypeId = oldTicket.pType;
                newTicket.price = oldTicket.amount;
                newTicket.sets = oldTicket.bType
                newTicket.times = oldTicket.multiple;
                newTicket.payslip = oldTicket.number;
                newTicket.printDeadline = oldTicket.closeTime;
                if(oldTicket.bonusStatus){
                    newTicket.isJackpot = oldTicket.bonusStatus;
                }
                if(oldTicket.seq){
                    newTicket.ticketNumber = oldTicket.seq;
                }
                if(oldTicket.passw){
                    newTicket.ticketPass = oldTicket.passw;
                }
                if(oldTicket.bonus){
                    newTicket.deservePrize = oldTicket.bonus;

                }
                newObj.push(newTicket);
            }
        }else{
            return null;
        }
    }catch (err){
        log.error("转换数据出错了。" + err);
    }
    return newObj;
};

TransDataUtil.prototype.transDataRecive = function(rst)
{
    var self = this;
    var newObj = new Array();
    if(rst instanceof Array){
        for(var key in rst){
            var oldTicket = {};
            var newTicket = rst[key];
            oldTicket._id = newTicket.ticketId;
            oldTicket.id = newTicket.ticketId;
            if(newTicket.ticketNumber){
                oldTicket.seq = newTicket.ticketNumber;
            }
            if(newTicket.ticketPass){
                oldTicket.passw = newTicket.ticketPass;
            }
            if(newTicket.printTerminal){
                oldTicket.terminal = newTicket.printTerminal;
            }
            if(newTicket.ticketStatus == "2"){
                oldTicket.printStatus = 1300;
            }
            if(newTicket.ticketBunch && newTicket.ticketBunch != "--" && newTicket.ticketBunch.length > 5){
                rnumber = self.reciveJCNumber(newTicket.ticketBunch);
                oldTicket.rNumber = rnumber;
            }
            if(newTicket.printTime){
                oldTicket.printTime = newTicket.printTime;
            }
            if(newTicket.claimStatus == "2"){
                oldTicket.status = 1600;
            }
            if(newTicket.claimTerminal){
                oldTicket.cashTerminal = newTicket.cashTerminal;
            }
            if(newTicket.actualPrize){
                oldTicket.cashAmount = newTicket.actualPrize;
            }
            if(newTicket.claimTime){
                oldTicket.cashTime = newTicket.claimTime;
            }
            newObj.push(oldTicket);
        }
    }else{
        return null;
    }
    return newObj
};
//转换
TransDataUtil.prototype.transTicket = function(tickect)
{
    var self = this;
    //step 1 什么彩种
    if(tickect.gameCode == "T51"){
        //竞彩足球
        tickect.gameCode = "TC_JCZQ";
        tickect.pType = self.JCZQ_PType[tickect.pType];
        tickect.bType = self.transJCZQBTYpe(tickect.bType);
        tickect.number = self.transJCZQBNumber(tickect.number, tickect.bType, tickect.multiple);
    }else if(tickect.gameCode == "T52"){
        //竞彩篮球
        tickect.gameCode = "TC_JCLQ";
    }else if(tickect.gameCode == ""){
        //高频
        tickect.gameCode = "TC_JCLQ";
    }else{
        log.error("暂时无法转换该彩种:" + tickect.gameCode);
    }
    return tickect;
};

//转换
TransDataUtil.prototype.reciveJCNumber = function(newRnumber)
{
    var self = this;
    //按照竞彩足球解析
    var pArray = newRnumber.split("|");
    var pType = self.Recive_JCZQPPType[pArray[0]];
    var termCodeResut = pArray[1];
    var singleArray = termCodeResut.split(",");
    var rNumberArray = new Array();
    for(var key in singleArray){
        var singleNumber = singleArray[key];
        var index = singleNumber.indexOf("=");
        var temCode = singleNumber.substring(0, index);
        var valueArray = singleNumber.substring(index+1).split("/");
        var newValue = new Array();
        var pType = "";
        for(var valueKey in valueArray){
            var peilvArray = valueArray[valueKey].split("(");
            var value = peilvArray[0];
            if(pType == ""){
                if(value in self.Recive_RQSPFResult){
                    pType = "01";
                }else if(value in self.Recive_SPFResult){
                    pType = "02";
                }else if(value in self.Recive_JQSResult){
                    pType = "04";
                }else if(value in self.Recive_BQCResult){
                    pType = "05";
                }else{
                    pType = "03";
                }
            }
            var peilv = peilvArray[1].substring(0,peilvArray[1].length - 1)
            newValue.push(value+"@"+peilv);
        }
        rNumberArray.push(pType + "|" + temCode + "|" + newValue.join(","));
    }
    var rNumber = rNumberArray.join(";");
    return rNumber;
};
//转换
TransDataUtil.prototype.transTicket = function(tickect)
{
    var self = this;
    //step 1 什么彩种
    if(tickect.gameCode == "T51"){
        //竞彩足球
        tickect.gameCode = "TC_JCZQ";
        tickect.pType = self.JCZQ_PType[tickect.pType];
        tickect.bType = self.transJCZQBTYpe(tickect.bType);
        tickect.number = self.transJCZQBNumber(tickect.number, tickect.bType, tickect.multiple);
    }else if(tickect.gameCode == "T52"){
        //竞彩篮球
        tickect.gameCode = "TC_JCLQ";
    }else if(tickect.gameCode == "T05"){
        //高频
        tickect.gameCode = "TC_SD11X5";
        tickect.pType = self.SD11X5_PType[tickect.pType];
        tickect.bType = self.SD11X5_BType(tickect.bType);
        tickect.number = self.transSD11X5Number(tickect.number, tickect.pType);
    }else{
        log.error("暂时无法转换该彩种:" + tickect.gameCode);
    }
    return tickect;
};

//转换玩法,彩种和 number
TransDataUtil.prototype.transJCZQBTYpe = function(bType)
{
    var newBType = "";
    if(typeof bType == "number"){
        bType = new String(bType);
    }
    if(bType.length > 2){
        newBType = bType[0] + "*" + bType.substr(1);
    }else{
        newBType = bType[0] + "*" + bType[1];
    }
    return newBType;
};
//转换玩法,彩种和 number
TransDataUtil.prototype.transSD11X5Number = function(number, pType){
    return pType + "|" + number;
}


//转换玩法,彩种和 number
TransDataUtil.prototype.transJCZQBNumber = function(number, bType, multiple)
{
    var self = this;
    var numberArray = number.split(";");
    var splitStr = "|";
    var newNumberArray = new Array();
    var newNumber = "";
    for(var key in numberArray){
        var number = "";
        var singleArray = numberArray[key].split(splitStr);
        var pType = singleArray[0];
        var termCode = singleArray[1];
        var value = singleArray[2];
        //比分和胜负半全场特殊处理
        if(pType === "04"){
            var valueArray = value.split(",");
            var scoreArray = new Array();
            for(var key in valueArray){
                var score = valueArray[key];
                scoreArray.push(self.JQSResult[score]);
            }
            value  = scoreArray.join("/");
        }else if(pType == "05"){
            var valueArray = value.split(",");
            var scoreArray = new Array();
            for(var key in valueArray){
                var score = valueArray[key];
                scoreArray.push(self.BQCResult[score]);
            }
            value  = scoreArray.join("/");
        }else if (pType == "01"){
            var valueArray = value.split(",");
            var scoreArray = new Array();
            for(var key in valueArray){
                var score = valueArray[key];
                scoreArray.push(self.RQSPFResult[score]);
            }
            value  = scoreArray.join("/");
        }else if(pType == "02"){
            var valueArray = value.split(",");
            var scoreArray = new Array();
            for(var key in valueArray){
                var score = valueArray[key];
                scoreArray.push(self.SPFResult[score]);
            }
            value  = scoreArray.join("/");
        }else{
            value  = value.replace(/,/g, "/");
        }
        number += self.JCZQPType[pType] + splitStr;
        number += termCode + "=" + value;
        newNumberArray.push(number);
    }
    newNumber = newNumberArray.join(",");
    newNumber = newNumber + splitStr + bType + "_" + multiple;
    return newNumber;
};



var test = new TransDataUtil();
var ticket = {};
ticket.gameCode = "T51";
ticket.pType = "05";
ticket.bType = "11";
ticket.number = "05|201503054001|31,03";
ticket.multiple = 10;

 console.log(test.transTicket(ticket));
var newTicket = {};
newTicket.ticketBunch = "BQC|201503054001=61(2.44)/66(0.123)|1*1_10";
var array = new Array();
array.push(newTicket);
console.log(test.transDataRecive(array));


module.exports = new TransDataUtil();